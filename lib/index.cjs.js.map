{"version":3,"file":"index.cjs.js","sources":["../node_modules/wicg-inert/dist/inert.esm.js","../src/components/portal/index.tsx","../src/components/Modal/index.tsx"],"sourcesContent":["var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * This work is licensed under the W3C Software and Document License\n * (http://www.w3.org/Consortium/Legal/2015/copyright-software-and-document).\n */\n\n(function () {\n  // Return early if we're not running inside of the browser.\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  // Convenience function for converting NodeLists.\n  /** @type {typeof Array.prototype.slice} */\n  var slice = Array.prototype.slice;\n\n  /**\n   * IE has a non-standard name for \"matches\".\n   * @type {typeof Element.prototype.matches}\n   */\n  var matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n\n  /** @type {string} */\n  var _focusableElementsString = ['a[href]', 'area[href]', 'input:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'details', 'summary', 'iframe', 'object', 'embed', '[contenteditable]'].join(',');\n\n  /**\n   * `InertRoot` manages a single inert subtree, i.e. a DOM subtree whose root element has an `inert`\n   * attribute.\n   *\n   * Its main functions are:\n   *\n   * - to create and maintain a set of managed `InertNode`s, including when mutations occur in the\n   *   subtree. The `makeSubtreeUnfocusable()` method handles collecting `InertNode`s via registering\n   *   each focusable node in the subtree with the singleton `InertManager` which manages all known\n   *   focusable nodes within inert subtrees. `InertManager` ensures that a single `InertNode`\n   *   instance exists for each focusable node which has at least one inert root as an ancestor.\n   *\n   * - to notify all managed `InertNode`s when this subtree stops being inert (i.e. when the `inert`\n   *   attribute is removed from the root node). This is handled in the destructor, which calls the\n   *   `deregister` method on `InertManager` for each managed inert node.\n   */\n\n  var InertRoot = function () {\n    /**\n     * @param {!Element} rootElement The Element at the root of the inert subtree.\n     * @param {!InertManager} inertManager The global singleton InertManager object.\n     */\n    function InertRoot(rootElement, inertManager) {\n      _classCallCheck(this, InertRoot);\n\n      /** @type {!InertManager} */\n      this._inertManager = inertManager;\n\n      /** @type {!Element} */\n      this._rootElement = rootElement;\n\n      /**\n       * @type {!Set<!InertNode>}\n       * All managed focusable nodes in this InertRoot's subtree.\n       */\n      this._managedNodes = new Set();\n\n      // Make the subtree hidden from assistive technology\n      if (this._rootElement.hasAttribute('aria-hidden')) {\n        /** @type {?string} */\n        this._savedAriaHidden = this._rootElement.getAttribute('aria-hidden');\n      } else {\n        this._savedAriaHidden = null;\n      }\n      this._rootElement.setAttribute('aria-hidden', 'true');\n\n      // Make all focusable elements in the subtree unfocusable and add them to _managedNodes\n      this._makeSubtreeUnfocusable(this._rootElement);\n\n      // Watch for:\n      // - any additions in the subtree: make them unfocusable too\n      // - any removals from the subtree: remove them from this inert root's managed nodes\n      // - attribute changes: if `tabindex` is added, or removed from an intrinsically focusable\n      //   element, make that node a managed node.\n      this._observer = new MutationObserver(this._onMutation.bind(this));\n      this._observer.observe(this._rootElement, { attributes: true, childList: true, subtree: true });\n    }\n\n    /**\n     * Call this whenever this object is about to become obsolete.  This unwinds all of the state\n     * stored in this object and updates the state of all of the managed nodes.\n     */\n\n\n    _createClass(InertRoot, [{\n      key: 'destructor',\n      value: function destructor() {\n        this._observer.disconnect();\n\n        if (this._rootElement) {\n          if (this._savedAriaHidden !== null) {\n            this._rootElement.setAttribute('aria-hidden', this._savedAriaHidden);\n          } else {\n            this._rootElement.removeAttribute('aria-hidden');\n          }\n        }\n\n        this._managedNodes.forEach(function (inertNode) {\n          this._unmanageNode(inertNode.node);\n        }, this);\n\n        // Note we cast the nulls to the ANY type here because:\n        // 1) We want the class properties to be declared as non-null, or else we\n        //    need even more casts throughout this code. All bets are off if an\n        //    instance has been destroyed and a method is called.\n        // 2) We don't want to cast \"this\", because we want type-aware optimizations\n        //    to know which properties we're setting.\n        this._observer = /** @type {?} */null;\n        this._rootElement = /** @type {?} */null;\n        this._managedNodes = /** @type {?} */null;\n        this._inertManager = /** @type {?} */null;\n      }\n\n      /**\n       * @return {!Set<!InertNode>} A copy of this InertRoot's managed nodes set.\n       */\n\n    }, {\n      key: '_makeSubtreeUnfocusable',\n\n\n      /**\n       * @param {!Node} startNode\n       */\n      value: function _makeSubtreeUnfocusable(startNode) {\n        var _this2 = this;\n\n        composedTreeWalk(startNode, function (node) {\n          return _this2._visitNode(node);\n        });\n\n        var activeElement = document.activeElement;\n\n        if (!document.body.contains(startNode)) {\n          // startNode may be in shadow DOM, so find its nearest shadowRoot to get the activeElement.\n          var node = startNode;\n          /** @type {!ShadowRoot|undefined} */\n          var root = undefined;\n          while (node) {\n            if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n              root = /** @type {!ShadowRoot} */node;\n              break;\n            }\n            node = node.parentNode;\n          }\n          if (root) {\n            activeElement = root.activeElement;\n          }\n        }\n        if (startNode.contains(activeElement)) {\n          activeElement.blur();\n          // In IE11, if an element is already focused, and then set to tabindex=-1\n          // calling blur() will not actually move the focus.\n          // To work around this we call focus() on the body instead.\n          if (activeElement === document.activeElement) {\n            document.body.focus();\n          }\n        }\n      }\n\n      /**\n       * @param {!Node} node\n       */\n\n    }, {\n      key: '_visitNode',\n      value: function _visitNode(node) {\n        if (node.nodeType !== Node.ELEMENT_NODE) {\n          return;\n        }\n        var element = /** @type {!Element} */node;\n\n        // If a descendant inert root becomes un-inert, its descendants will still be inert because of\n        // this inert root, so all of its managed nodes need to be adopted by this InertRoot.\n        if (element !== this._rootElement && element.hasAttribute('inert')) {\n          this._adoptInertRoot(element);\n        }\n\n        if (matches.call(element, _focusableElementsString) || element.hasAttribute('tabindex')) {\n          this._manageNode(element);\n        }\n      }\n\n      /**\n       * Register the given node with this InertRoot and with InertManager.\n       * @param {!Node} node\n       */\n\n    }, {\n      key: '_manageNode',\n      value: function _manageNode(node) {\n        var inertNode = this._inertManager.register(node, this);\n        this._managedNodes.add(inertNode);\n      }\n\n      /**\n       * Unregister the given node with this InertRoot and with InertManager.\n       * @param {!Node} node\n       */\n\n    }, {\n      key: '_unmanageNode',\n      value: function _unmanageNode(node) {\n        var inertNode = this._inertManager.deregister(node, this);\n        if (inertNode) {\n          this._managedNodes['delete'](inertNode);\n        }\n      }\n\n      /**\n       * Unregister the entire subtree starting at `startNode`.\n       * @param {!Node} startNode\n       */\n\n    }, {\n      key: '_unmanageSubtree',\n      value: function _unmanageSubtree(startNode) {\n        var _this3 = this;\n\n        composedTreeWalk(startNode, function (node) {\n          return _this3._unmanageNode(node);\n        });\n      }\n\n      /**\n       * If a descendant node is found with an `inert` attribute, adopt its managed nodes.\n       * @param {!Element} node\n       */\n\n    }, {\n      key: '_adoptInertRoot',\n      value: function _adoptInertRoot(node) {\n        var inertSubroot = this._inertManager.getInertRoot(node);\n\n        // During initialisation this inert root may not have been registered yet,\n        // so register it now if need be.\n        if (!inertSubroot) {\n          this._inertManager.setInert(node, true);\n          inertSubroot = this._inertManager.getInertRoot(node);\n        }\n\n        inertSubroot.managedNodes.forEach(function (savedInertNode) {\n          this._manageNode(savedInertNode.node);\n        }, this);\n      }\n\n      /**\n       * Callback used when mutation observer detects subtree additions, removals, or attribute changes.\n       * @param {!Array<!MutationRecord>} records\n       * @param {!MutationObserver} self\n       */\n\n    }, {\n      key: '_onMutation',\n      value: function _onMutation(records, self) {\n        records.forEach(function (record) {\n          var target = /** @type {!Element} */record.target;\n          if (record.type === 'childList') {\n            // Manage added nodes\n            slice.call(record.addedNodes).forEach(function (node) {\n              this._makeSubtreeUnfocusable(node);\n            }, this);\n\n            // Un-manage removed nodes\n            slice.call(record.removedNodes).forEach(function (node) {\n              this._unmanageSubtree(node);\n            }, this);\n          } else if (record.type === 'attributes') {\n            if (record.attributeName === 'tabindex') {\n              // Re-initialise inert node if tabindex changes\n              this._manageNode(target);\n            } else if (target !== this._rootElement && record.attributeName === 'inert' && target.hasAttribute('inert')) {\n              // If a new inert root is added, adopt its managed nodes and make sure it knows about the\n              // already managed nodes from this inert subroot.\n              this._adoptInertRoot(target);\n              var inertSubroot = this._inertManager.getInertRoot(target);\n              this._managedNodes.forEach(function (managedNode) {\n                if (target.contains(managedNode.node)) {\n                  inertSubroot._manageNode(managedNode.node);\n                }\n              });\n            }\n          }\n        }, this);\n      }\n    }, {\n      key: 'managedNodes',\n      get: function get() {\n        return new Set(this._managedNodes);\n      }\n\n      /** @return {boolean} */\n\n    }, {\n      key: 'hasSavedAriaHidden',\n      get: function get() {\n        return this._savedAriaHidden !== null;\n      }\n\n      /** @param {?string} ariaHidden */\n\n    }, {\n      key: 'savedAriaHidden',\n      set: function set(ariaHidden) {\n        this._savedAriaHidden = ariaHidden;\n      }\n\n      /** @return {?string} */\n      ,\n      get: function get() {\n        return this._savedAriaHidden;\n      }\n    }]);\n\n    return InertRoot;\n  }();\n\n  /**\n   * `InertNode` initialises and manages a single inert node.\n   * A node is inert if it is a descendant of one or more inert root elements.\n   *\n   * On construction, `InertNode` saves the existing `tabindex` value for the node, if any, and\n   * either removes the `tabindex` attribute or sets it to `-1`, depending on whether the element\n   * is intrinsically focusable or not.\n   *\n   * `InertNode` maintains a set of `InertRoot`s which are descendants of this `InertNode`. When an\n   * `InertRoot` is destroyed, and calls `InertManager.deregister()`, the `InertManager` notifies the\n   * `InertNode` via `removeInertRoot()`, which in turn destroys the `InertNode` if no `InertRoot`s\n   * remain in the set. On destruction, `InertNode` reinstates the stored `tabindex` if one exists,\n   * or removes the `tabindex` attribute if the element is intrinsically focusable.\n   */\n\n\n  var InertNode = function () {\n    /**\n     * @param {!Node} node A focusable element to be made inert.\n     * @param {!InertRoot} inertRoot The inert root element associated with this inert node.\n     */\n    function InertNode(node, inertRoot) {\n      _classCallCheck(this, InertNode);\n\n      /** @type {!Node} */\n      this._node = node;\n\n      /** @type {boolean} */\n      this._overrodeFocusMethod = false;\n\n      /**\n       * @type {!Set<!InertRoot>} The set of descendant inert roots.\n       *    If and only if this set becomes empty, this node is no longer inert.\n       */\n      this._inertRoots = new Set([inertRoot]);\n\n      /** @type {?number} */\n      this._savedTabIndex = null;\n\n      /** @type {boolean} */\n      this._destroyed = false;\n\n      // Save any prior tabindex info and make this node untabbable\n      this.ensureUntabbable();\n    }\n\n    /**\n     * Call this whenever this object is about to become obsolete.\n     * This makes the managed node focusable again and deletes all of the previously stored state.\n     */\n\n\n    _createClass(InertNode, [{\n      key: 'destructor',\n      value: function destructor() {\n        this._throwIfDestroyed();\n\n        if (this._node && this._node.nodeType === Node.ELEMENT_NODE) {\n          var element = /** @type {!Element} */this._node;\n          if (this._savedTabIndex !== null) {\n            element.setAttribute('tabindex', this._savedTabIndex);\n          } else {\n            element.removeAttribute('tabindex');\n          }\n\n          // Use `delete` to restore native focus method.\n          if (this._overrodeFocusMethod) {\n            delete element.focus;\n          }\n        }\n\n        // See note in InertRoot.destructor for why we cast these nulls to ANY.\n        this._node = /** @type {?} */null;\n        this._inertRoots = /** @type {?} */null;\n        this._destroyed = true;\n      }\n\n      /**\n       * @type {boolean} Whether this object is obsolete because the managed node is no longer inert.\n       * If the object has been destroyed, any attempt to access it will cause an exception.\n       */\n\n    }, {\n      key: '_throwIfDestroyed',\n\n\n      /**\n       * Throw if user tries to access destroyed InertNode.\n       */\n      value: function _throwIfDestroyed() {\n        if (this.destroyed) {\n          throw new Error('Trying to access destroyed InertNode');\n        }\n      }\n\n      /** @return {boolean} */\n\n    }, {\n      key: 'ensureUntabbable',\n\n\n      /** Save the existing tabindex value and make the node untabbable and unfocusable */\n      value: function ensureUntabbable() {\n        if (this.node.nodeType !== Node.ELEMENT_NODE) {\n          return;\n        }\n        var element = /** @type {!Element} */this.node;\n        if (matches.call(element, _focusableElementsString)) {\n          if ( /** @type {!HTMLElement} */element.tabIndex === -1 && this.hasSavedTabIndex) {\n            return;\n          }\n\n          if (element.hasAttribute('tabindex')) {\n            this._savedTabIndex = /** @type {!HTMLElement} */element.tabIndex;\n          }\n          element.setAttribute('tabindex', '-1');\n          if (element.nodeType === Node.ELEMENT_NODE) {\n            element.focus = function () {};\n            this._overrodeFocusMethod = true;\n          }\n        } else if (element.hasAttribute('tabindex')) {\n          this._savedTabIndex = /** @type {!HTMLElement} */element.tabIndex;\n          element.removeAttribute('tabindex');\n        }\n      }\n\n      /**\n       * Add another inert root to this inert node's set of managing inert roots.\n       * @param {!InertRoot} inertRoot\n       */\n\n    }, {\n      key: 'addInertRoot',\n      value: function addInertRoot(inertRoot) {\n        this._throwIfDestroyed();\n        this._inertRoots.add(inertRoot);\n      }\n\n      /**\n       * Remove the given inert root from this inert node's set of managing inert roots.\n       * If the set of managing inert roots becomes empty, this node is no longer inert,\n       * so the object should be destroyed.\n       * @param {!InertRoot} inertRoot\n       */\n\n    }, {\n      key: 'removeInertRoot',\n      value: function removeInertRoot(inertRoot) {\n        this._throwIfDestroyed();\n        this._inertRoots['delete'](inertRoot);\n        if (this._inertRoots.size === 0) {\n          this.destructor();\n        }\n      }\n    }, {\n      key: 'destroyed',\n      get: function get() {\n        return (/** @type {!InertNode} */this._destroyed\n        );\n      }\n    }, {\n      key: 'hasSavedTabIndex',\n      get: function get() {\n        return this._savedTabIndex !== null;\n      }\n\n      /** @return {!Node} */\n\n    }, {\n      key: 'node',\n      get: function get() {\n        this._throwIfDestroyed();\n        return this._node;\n      }\n\n      /** @param {?number} tabIndex */\n\n    }, {\n      key: 'savedTabIndex',\n      set: function set(tabIndex) {\n        this._throwIfDestroyed();\n        this._savedTabIndex = tabIndex;\n      }\n\n      /** @return {?number} */\n      ,\n      get: function get() {\n        this._throwIfDestroyed();\n        return this._savedTabIndex;\n      }\n    }]);\n\n    return InertNode;\n  }();\n\n  /**\n   * InertManager is a per-document singleton object which manages all inert roots and nodes.\n   *\n   * When an element becomes an inert root by having an `inert` attribute set and/or its `inert`\n   * property set to `true`, the `setInert` method creates an `InertRoot` object for the element.\n   * The `InertRoot` in turn registers itself as managing all of the element's focusable descendant\n   * nodes via the `register()` method. The `InertManager` ensures that a single `InertNode` instance\n   * is created for each such node, via the `_managedNodes` map.\n   */\n\n\n  var InertManager = function () {\n    /**\n     * @param {!Document} document\n     */\n    function InertManager(document) {\n      _classCallCheck(this, InertManager);\n\n      if (!document) {\n        throw new Error('Missing required argument; InertManager needs to wrap a document.');\n      }\n\n      /** @type {!Document} */\n      this._document = document;\n\n      /**\n       * All managed nodes known to this InertManager. In a map to allow looking up by Node.\n       * @type {!Map<!Node, !InertNode>}\n       */\n      this._managedNodes = new Map();\n\n      /**\n       * All inert roots known to this InertManager. In a map to allow looking up by Node.\n       * @type {!Map<!Node, !InertRoot>}\n       */\n      this._inertRoots = new Map();\n\n      /**\n       * Observer for mutations on `document.body`.\n       * @type {!MutationObserver}\n       */\n      this._observer = new MutationObserver(this._watchForInert.bind(this));\n\n      // Add inert style.\n      addInertStyle(document.head || document.body || document.documentElement);\n\n      // Wait for document to be loaded.\n      if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', this._onDocumentLoaded.bind(this));\n      } else {\n        this._onDocumentLoaded();\n      }\n    }\n\n    /**\n     * Set whether the given element should be an inert root or not.\n     * @param {!Element} root\n     * @param {boolean} inert\n     */\n\n\n    _createClass(InertManager, [{\n      key: 'setInert',\n      value: function setInert(root, inert) {\n        if (inert) {\n          if (this._inertRoots.has(root)) {\n            // element is already inert\n            return;\n          }\n\n          var inertRoot = new InertRoot(root, this);\n          root.setAttribute('inert', '');\n          this._inertRoots.set(root, inertRoot);\n          // If not contained in the document, it must be in a shadowRoot.\n          // Ensure inert styles are added there.\n          if (!this._document.body.contains(root)) {\n            var parent = root.parentNode;\n            while (parent) {\n              if (parent.nodeType === 11) {\n                addInertStyle(parent);\n              }\n              parent = parent.parentNode;\n            }\n          }\n        } else {\n          if (!this._inertRoots.has(root)) {\n            // element is already non-inert\n            return;\n          }\n\n          var _inertRoot = this._inertRoots.get(root);\n          _inertRoot.destructor();\n          this._inertRoots['delete'](root);\n          root.removeAttribute('inert');\n        }\n      }\n\n      /**\n       * Get the InertRoot object corresponding to the given inert root element, if any.\n       * @param {!Node} element\n       * @return {!InertRoot|undefined}\n       */\n\n    }, {\n      key: 'getInertRoot',\n      value: function getInertRoot(element) {\n        return this._inertRoots.get(element);\n      }\n\n      /**\n       * Register the given InertRoot as managing the given node.\n       * In the case where the node has a previously existing inert root, this inert root will\n       * be added to its set of inert roots.\n       * @param {!Node} node\n       * @param {!InertRoot} inertRoot\n       * @return {!InertNode} inertNode\n       */\n\n    }, {\n      key: 'register',\n      value: function register(node, inertRoot) {\n        var inertNode = this._managedNodes.get(node);\n        if (inertNode !== undefined) {\n          // node was already in an inert subtree\n          inertNode.addInertRoot(inertRoot);\n        } else {\n          inertNode = new InertNode(node, inertRoot);\n        }\n\n        this._managedNodes.set(node, inertNode);\n\n        return inertNode;\n      }\n\n      /**\n       * De-register the given InertRoot as managing the given inert node.\n       * Removes the inert root from the InertNode's set of managing inert roots, and remove the inert\n       * node from the InertManager's set of managed nodes if it is destroyed.\n       * If the node is not currently managed, this is essentially a no-op.\n       * @param {!Node} node\n       * @param {!InertRoot} inertRoot\n       * @return {?InertNode} The potentially destroyed InertNode associated with this node, if any.\n       */\n\n    }, {\n      key: 'deregister',\n      value: function deregister(node, inertRoot) {\n        var inertNode = this._managedNodes.get(node);\n        if (!inertNode) {\n          return null;\n        }\n\n        inertNode.removeInertRoot(inertRoot);\n        if (inertNode.destroyed) {\n          this._managedNodes['delete'](node);\n        }\n\n        return inertNode;\n      }\n\n      /**\n       * Callback used when document has finished loading.\n       */\n\n    }, {\n      key: '_onDocumentLoaded',\n      value: function _onDocumentLoaded() {\n        // Find all inert roots in document and make them actually inert.\n        var inertElements = slice.call(this._document.querySelectorAll('[inert]'));\n        inertElements.forEach(function (inertElement) {\n          this.setInert(inertElement, true);\n        }, this);\n\n        // Comment this out to use programmatic API only.\n        this._observer.observe(this._document.body || this._document.documentElement, { attributes: true, subtree: true, childList: true });\n      }\n\n      /**\n       * Callback used when mutation observer detects attribute changes.\n       * @param {!Array<!MutationRecord>} records\n       * @param {!MutationObserver} self\n       */\n\n    }, {\n      key: '_watchForInert',\n      value: function _watchForInert(records, self) {\n        var _this = this;\n        records.forEach(function (record) {\n          switch (record.type) {\n            case 'childList':\n              slice.call(record.addedNodes).forEach(function (node) {\n                if (node.nodeType !== Node.ELEMENT_NODE) {\n                  return;\n                }\n                var inertElements = slice.call(node.querySelectorAll('[inert]'));\n                if (matches.call(node, '[inert]')) {\n                  inertElements.unshift(node);\n                }\n                inertElements.forEach(function (inertElement) {\n                  this.setInert(inertElement, true);\n                }, _this);\n              }, _this);\n              break;\n            case 'attributes':\n              if (record.attributeName !== 'inert') {\n                return;\n              }\n              var target = /** @type {!Element} */record.target;\n              var inert = target.hasAttribute('inert');\n              _this.setInert(target, inert);\n              break;\n          }\n        }, this);\n      }\n    }]);\n\n    return InertManager;\n  }();\n\n  /**\n   * Recursively walk the composed tree from |node|.\n   * @param {!Node} node\n   * @param {(function (!Element))=} callback Callback to be called for each element traversed,\n   *     before descending into child nodes.\n   * @param {?ShadowRoot=} shadowRootAncestor The nearest ShadowRoot ancestor, if any.\n   */\n\n\n  function composedTreeWalk(node, callback, shadowRootAncestor) {\n    if (node.nodeType == Node.ELEMENT_NODE) {\n      var element = /** @type {!Element} */node;\n      if (callback) {\n        callback(element);\n      }\n\n      // Descend into node:\n      // If it has a ShadowRoot, ignore all child elements - these will be picked\n      // up by the <content> or <shadow> elements. Descend straight into the\n      // ShadowRoot.\n      var shadowRoot = /** @type {!HTMLElement} */element.shadowRoot;\n      if (shadowRoot) {\n        composedTreeWalk(shadowRoot, callback, shadowRoot);\n        return;\n      }\n\n      // If it is a <content> element, descend into distributed elements - these\n      // are elements from outside the shadow root which are rendered inside the\n      // shadow DOM.\n      if (element.localName == 'content') {\n        var content = /** @type {!HTMLContentElement} */element;\n        // Verifies if ShadowDom v0 is supported.\n        var distributedNodes = content.getDistributedNodes ? content.getDistributedNodes() : [];\n        for (var i = 0; i < distributedNodes.length; i++) {\n          composedTreeWalk(distributedNodes[i], callback, shadowRootAncestor);\n        }\n        return;\n      }\n\n      // If it is a <slot> element, descend into assigned nodes - these\n      // are elements from outside the shadow root which are rendered inside the\n      // shadow DOM.\n      if (element.localName == 'slot') {\n        var slot = /** @type {!HTMLSlotElement} */element;\n        // Verify if ShadowDom v1 is supported.\n        var _distributedNodes = slot.assignedNodes ? slot.assignedNodes({ flatten: true }) : [];\n        for (var _i = 0; _i < _distributedNodes.length; _i++) {\n          composedTreeWalk(_distributedNodes[_i], callback, shadowRootAncestor);\n        }\n        return;\n      }\n    }\n\n    // If it is neither the parent of a ShadowRoot, a <content> element, a <slot>\n    // element, nor a <shadow> element recurse normally.\n    var child = node.firstChild;\n    while (child != null) {\n      composedTreeWalk(child, callback, shadowRootAncestor);\n      child = child.nextSibling;\n    }\n  }\n\n  /**\n   * Adds a style element to the node containing the inert specific styles\n   * @param {!Node} node\n   */\n  function addInertStyle(node) {\n    if (node.querySelector('style#inert-style, link#inert-style')) {\n      return;\n    }\n    var style = document.createElement('style');\n    style.setAttribute('id', 'inert-style');\n    style.textContent = '\\n' + '[inert] {\\n' + '  pointer-events: none;\\n' + '  cursor: default;\\n' + '}\\n' + '\\n' + '[inert], [inert] * {\\n' + '  -webkit-user-select: none;\\n' + '  -moz-user-select: none;\\n' + '  -ms-user-select: none;\\n' + '  user-select: none;\\n' + '}\\n';\n    node.appendChild(style);\n  }\n\n  if (!Element.prototype.hasOwnProperty('inert')) {\n    /** @type {!InertManager} */\n    var inertManager = new InertManager(document);\n\n    Object.defineProperty(Element.prototype, 'inert', {\n      enumerable: true,\n      /** @this {!Element} */\n      get: function get() {\n        return this.hasAttribute('inert');\n      },\n      /** @this {!Element} */\n      set: function set(inert) {\n        inertManager.setInert(this, inert);\n      }\n    });\n  }\n})();\n","import React, {useMemo, useEffect} from 'react'\nimport ReactDOM from 'react-dom'\n\ninterface PortalProps {\n  children?: React.ReactNode\n  parent?: HTMLElement\n  className?: string\n}\n\nconst Portal: React.FC<PortalProps> = ({children, parent, className}) => {\n  const el = useMemo(() => document.createElement('div'), [])\n\n  useEffect(() => {\n    const target = parent && parent.appendChild ? parent : document.body\n\n    const classList = ['__pretty-modal__']\n    if (className) className.split(' ').forEach((item: string) => classList.push(item))\n\n    classList.forEach(item => el.classList.add(item))\n\n    target.appendChild(el)\n    return () => {\n      target.removeChild(el)\n    }\n  }, [el, parent, className])\n  return ReactDOM.createPortal(children, el)\n}\n\nexport default Portal\n","import React, {useEffect, useState, useRef} from 'react'\nimport styled, {createGlobalStyle} from 'styled-components'\nimport 'wicg-inert'\n\nimport Portal from '../portal'\n\nconst GlobalStyles = createGlobalStyle`\n  html {\n    --pretty-modal-backdrop-background-color: rgba(0, 0, 0, 0.5);\n    --pretty-modal-backdrop-backdrop-filter: blur(1px);\n    --pretty-modal-backdrop-transition: all 100ms;\n    --pretty-modal-backdrop-transition-delay: 200ms;\n    --pretty-modal-backdrop-display: flex;\n    --pretty-modal-backdrop-align-items: center;\n    --pretty-modal-backdrop-justify-content: center;\n    --pretty-modal-backdrop-padding: 30px 0;\n\n    --pretty-modal-modal-container-transform: translateY(-10rem);\n    --pretty-modal-modal-container-transition: all 200ms;\n    --pretty-modal-modal-container-padding: 20px;\n    --pretty-modal-modal-container-min-height: 50px;\n    --pretty-modal-modal-container-min-width: 50px;\n    --pretty-modal-modal-container-max-width: 80%;\n    --pretty-modal-modal-container-max-height: 100%;\n    --pretty-modal-modal-container-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n    --pretty-modal-modal-container-background-color: #fff;\n    --pretty-modal-modal-container-border-radius: 2px;\n\n    --pretty-modal-active-transition-duration: 250ms;\n    --pretty-modal-active-transition-delay: 0ms;\n\n    --pretty-modal-active-modal-container-transform: translateX(0);\n    --pretty-modal-active-modal-container-transition-delay: 150ms;\n    --pretty-modal-active-modal-container-transition-duration: 350ms;\n  }\n`\n\nconst Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: var(--pretty-modal-backdrop-background-color);\n  backdrop-filter: var(--pretty-modal-backdrop-backdrop-filter);\n  opacity: 0;\n  transition: var(--pretty-modal-backdrop-transition);\n  transition-delay: var(--pretty-modal-backdrop-transition-delay);\n  display: var(--pretty-modal-backdrop-display);\n  align-items: var(--pretty-modal-backdrop-align-items);\n  justify-content: var(--pretty-modal-backdrop-justify-content);\n  padding: var(--pretty-modal-backdrop-padding);\n\n  & .modal-container {\n    transform: var(--pretty-modal-modal-container-transform);\n    transition: var(--pretty-modal-modal-container-transition);\n    opacity: 0;\n  }\n\n  &.active {\n    transition-duration: var(--pretty-modal-active-transition-duration);\n    transition-delay: var(--pretty-modal-active-transition-delay);\n    opacity: 1;\n\n    & .modal-container {\n      transform: var(--pretty-modal-active-modal-container-transform);\n      opacity: 1;\n      transition-delay: var(--pretty-modal-active-modal-container-transition-delay);\n      transition-duration: var(--pretty-modal-active-modal-container-transition-duration);\n    }\n  }\n`\n\nconst ModalContainer = styled.div`\n  position: relative;\n  padding: var(--pretty-modal-modal-container-padding);\n  box-sizing: border-box;\n  min-height: var(--pretty-modal-modal-container-min-height);\n  min-width: var(--pretty-modal-modal-container-min-width);\n  max-width: var(--pretty-modal-modal-container-max-width);\n  max-height: var(--pretty-modal-modal-container-max-height);\n  box-shadow: var(--pretty-modal-modal-container-box-shadow);\n  background-color: var(--pretty-modal-modal-container-background-color);\n  border-radius: var(--pretty-modal-modal-container-border-radius);\n  overflow-y: auto;\n  overflow-x: hidden;\n`\ninterface ModalProps {\n  /**\n   *  Where you can add the modal elements\n   */\n  children?: React.ReactNode\n  /**\n   *  When it's true it will open the modal\n   */\n  open?: boolean\n  /**\n   * Callback fired when the Modal is requested to be closed by a click on the overlay or when user press esc key\n   */\n  onClose?: () => void\n  /**\n   * When it's true it will prevent close the modal when you click on the backdrop of the close button\n   */\n  locked?: boolean\n  /**\n   * You can specify the parent of the modal where you can render the portal by default it will create a div\n   */\n  parent?: HTMLElement\n  /**\n   * You can add class the the parent dev\n   */\n  parentClass?: string\n}\n\nconst Modal: React.FC<ModalProps> = ({\n  children,\n  open,\n  onClose,\n  locked,\n  parent,\n  parentClass,\n}: ModalProps) => {\n  const [active, setActive] = useState<boolean | undefined>(false)\n\n  const backdrop = useRef<HTMLDivElement | null>(null)\n\n  const root = document.querySelector('#root')\n\n  useEffect(() => {\n    const {current} = backdrop\n\n    const transitionEnd = () => setActive(open)\n\n    const keyHandler = (event: {which: number}) =>\n      !locked && [27].indexOf(event.which) >= 0 && onClose ? onClose() : undefined\n\n    const clickHandler = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) =>\n      !locked && e.target === current && onClose ? onClose() : undefined\n\n    if (current) {\n      current && current.addEventListener('transitionend', transitionEnd)\n      current.addEventListener('click', clickHandler as any)\n      window.addEventListener('keyup', keyHandler)\n    }\n\n    if (open) {\n      window.setTimeout(() => {\n        ;(document.activeElement as HTMLElement).blur()\n        setActive(open)\n        if (root) {\n          root.setAttribute('inert', 'true')\n        }\n      }, 10)\n    }\n\n    return () => {\n      if (current) {\n        current.removeEventListener('transitionend', transitionEnd)\n        current.removeEventListener('click', clickHandler as any)\n      }\n      if (root) {\n        root.removeAttribute('inert')\n      }\n      window.removeEventListener('keyup', keyHandler)\n    }\n  }, [open, locked, onClose])\n\n  return (\n    <React.Fragment>\n      <GlobalStyles />\n      {(open || active) && (\n        <Portal parent={parent} className={parentClass}>\n          <Backdrop ref={backdrop} className={active && open ? 'active' : ''}>\n            <ModalContainer className=\"modal-container\">{children}</ModalContainer>\n          </Backdrop>\n        </Portal>\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default Modal\n"],"names":["useMemo","useEffect","ReactDOM","createGlobalStyle","styled","useState","useRef","React"],"mappings":"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"}